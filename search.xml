<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>idapro断点报错</title>
      <link href="/2023/11/25/idapro%E6%96%AD%E7%82%B9%E6%8A%A5%E9%94%99/"/>
      <url>/2023/11/25/idapro%E6%96%AD%E7%82%B9%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h3 id="ida-在Generate-pseudocode窗口断点报错"><a href="#ida-在Generate-pseudocode窗口断点报错" class="headerlink" title="ida 在Generate pseudocode窗口断点报错"></a>ida 在Generate pseudocode窗口断点报错</h3><p>在伪c代码视图任意地点断点报错</p><p><img src="https://www.helloimg.com/images/2023/10/03/oHPFrY.png" alt="image-20231003095125435"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs error">The source level debugger has been disabled.<br>To enable it, use Debugger, Use source-level debugging<br></code></pre></td></tr></table></figure><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><p>将上面的Use source-level debugging点亮</p><p><img src="https://www.helloimg.com/images/2023/10/03/oHPa39.png" alt="image-20231003095237395"></p><p>再短点就可以生效并且不会提示</p><p>The source level debugger has been disabled.<br>To enable it, use Debugger, Use source-level debugging</p>]]></content>
      
      
      <categories>
          
          <category> 日常小问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idapro </tag>
            
            <tag> 日常日记 </tag>
            
            <tag> 反汇编 </tag>
            
            <tag> 断点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ida_pro快捷键</title>
      <link href="/2023/10/03/idapro%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2023/10/03/idapro%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="ida常用快捷键；mac用户可以ctrl-control-alt-option"><a href="#ida常用快捷键；mac用户可以ctrl-control-alt-option" class="headerlink" title="ida常用快捷键；mac用户可以ctrl-&gt;control alt-&gt;option"></a>ida常用快捷键；mac用户可以ctrl-&gt;control alt-&gt;option</h3><p><img src="https://www.helloimg.com/images/2023/10/03/oHPZJv.png" alt="idapro快捷键"></p>]]></content>
      
      
      <categories>
          
          <category> 快捷键 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ida </tag>
            
            <tag> idapro </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10配置双机调试</title>
      <link href="/2023/09/27/new%E6%90%AD%E5%BB%BAwin10%E5%8F%8C%E6%9C%BA%E8%B0%83%E8%AF%95/"/>
      <url>/2023/09/27/new%E6%90%AD%E5%BB%BAwin10%E5%8F%8C%E6%9C%BA%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建Windows-10-双机调试"><a href="#搭建Windows-10-双机调试" class="headerlink" title="搭建Windows 10 双机调试"></a>搭建Windows 10 双机调试</h2><p>首先安装号Windows 10 系统 </p><p>管理员方式运行cmd</p><h3 id="依次输入"><a href="#依次输入" class="headerlink" title="依次输入"></a>依次输入</h3><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271609493.png" alt="image-20230927160914453"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmd">//添加开机引导项<br>bcdedit /<span class="hljs-built_in">copy</span> &#123;current&#125; /d Debug<br><br>//设置引导项时间<br><br>bcdedit /timeout <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><p>让后使用Windows自动的重启不要使用VMware 重启</p><p>重启后依次输入</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271612085.png" alt="image-20230927161238980"></p><p>依次输入管理员cmd</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271621291.png" alt="image-20230927162105237"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CMD">bcdedit /dbgsettings SERIAL DEBUGPORT:<span class="hljs-number">1</span> BAUDRATE:<span class="hljs-number">115200</span><br><br>bcdedit /bootDebug ON<br><br>bcdedit /Debug ON<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271622813.png" alt="image-20230927162227741"></p><p>检查一下配置</p><p>让后win加q 搜索config 系统配置</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271641738.png" alt="image-20230927164106700"></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271706058.png" alt="image-20230927170628995"></p><h3 id="WINDBG-配置"><a href="#WINDBG-配置" class="headerlink" title="WINDBG 配置"></a>WINDBG 配置</h3><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271708153.png" alt="image-20230927170825091"></p><h3 id="配置符号表"><a href="#配置符号表" class="headerlink" title="配置符号表"></a>配置符号表</h3><p><code>SRV*d:\MySymbol*http://msdl.microsoft.com/download/symbols</code><br><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271709232.png" alt="image-20230927170940171"></p><h3 id="配置调试器"><a href="#配置调试器" class="headerlink" title="配置调试器"></a>配置调试器</h3><p>点击文件</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271711027.png" alt="image-20230927171148969"></p><p>单机attach to kernel</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271712976.png" alt="image-20230927171206924"></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309271720112.png" alt="image-20230927172002061"></p><h3 id="测试peb"><a href="#测试peb" class="headerlink" title="测试peb"></a>测试peb</h3><p><code>!process 0 0</code></p><p><code>!IDT</code></p><p><code>.reload</code></p><p>完结撒花</p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> 双机调试 </tag>
            
            <tag> Windows 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iscc2023_reversewp</title>
      <link href="/2023/07/08/iscc2023_Reverse/"/>
      <url>/2023/07/08/iscc2023_Reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="easyctf2"><a href="#easyctf2" class="headerlink" title="easyctf2"></a>easyctf2</h2><p>安卓apk 打开看 <img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1689324797033-28a5dd2e-5189-4fab-ba58-466de2c00f47.png" alt="image.png" title="image.png"> jeb 反编译找到MainActivity</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1689325011698-58504440-b50d-4498-a278-ac741b640b0d.png" alt="image.png" title="image.png"> 进入zzsence方法 <img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1689325182959-bf21af08-cb40-4b08-af85-028e2966758c.png" alt="image.png" title="image.png"> <img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1689325464329-d9a46a53-6493-4b5f-a3e0-d8a0161e2e0e.png" alt="image.png" title="image.png"> 编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> unpad<br><br><span class="hljs-comment"># 密文</span><br>ciphertext = <span class="hljs-built_in">bytes</span>(x &amp; <span class="hljs-number">0xFF</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span>  [<span class="hljs-number">0x7F</span>, <span class="hljs-number">41</span>, <span class="hljs-number">0x20</span>, -<span class="hljs-number">23</span>, <span class="hljs-number">53</span>, <span class="hljs-number">0xFFFFFF8F</span>, -<span class="hljs-number">59</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">5</span>, <span class="hljs-number">16</span>, <span class="hljs-number">52</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">91</span>, <span class="hljs-number">150</span>, <span class="hljs-number">43</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">140</span>, <span class="hljs-number">170</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">36</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">140</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">200</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">78</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xF7</span>])<br><span class="hljs-comment"># # 密钥</span><br>key = <span class="hljs-built_in">bytes</span>(x &amp; <span class="hljs-number">0xFF</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span>  [-<span class="hljs-number">95</span>,<span class="hljs-number">109</span>,<span class="hljs-number">22</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">26</span>,-<span class="hljs-number">6</span>,<span class="hljs-number">48</span>,<span class="hljs-number">95</span>,-<span class="hljs-number">41</span>,<span class="hljs-number">126</span>,<span class="hljs-number">94</span>,-<span class="hljs-number">98</span>,-<span class="hljs-number">20</span>,<span class="hljs-number">107</span>,-<span class="hljs-number">97</span>,-<span class="hljs-number">35</span>])<br><span class="hljs-comment"># 偏移iv</span><br>iv = <span class="hljs-built_in">bytes</span>([<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">12</span>,<span class="hljs-number">14</span>,<span class="hljs-number">16</span>,<span class="hljs-number">18</span>,<span class="hljs-number">20</span>,<span class="hljs-number">22</span>,<span class="hljs-number">24</span>,<span class="hljs-number">26</span>,<span class="hljs-number">28</span>,<span class="hljs-number">30</span>])<br><span class="hljs-comment"># 创建AES解密器</span><br>cipher = AES.new(key, AES.MODE_CBC, iv)<br><span class="hljs-comment"># 解密密文并删除填充</span><br>plaintext = unpad(cipher.decrypt(ciphertext), AES.block_size).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br><span class="hljs-built_in">print</span>(plaintext)<br><br><span class="hljs-comment">#flag&#123;jsdg632t12&#125;</span><br></code></pre></td></tr></table></figure><h2 id="crackme"><a href="#crackme" class="headerlink" title="crackme"></a>crackme</h2><p>使用c# 工具反编译出</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// CrackmeApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</span><br><span class="hljs-comment">// CrackmeApp.Form1</span><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.ComponentModel;<br><span class="hljs-keyword">using</span> System.Drawing;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><span class="hljs-keyword">using</span> CrackmeApp;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Form1</span> : <span class="hljs-title">Form</span><br>&#123;<br><span class="hljs-keyword">private</span> IContainer components;<br><br><span class="hljs-keyword">private</span> Button button1;<br><br><span class="hljs-keyword">private</span> TextBox textBox1;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Form1</span>()</span><br>&#123;<br>InitializeComponent();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">button1_Click</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, EventArgs e</span>)</span><br>&#123;<br><span class="hljs-built_in">int</span> a_ = <span class="hljs-number">2</span>;<br><span class="hljs-built_in">int</span>[] array = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">10</span>] &#123; <span class="hljs-number">123</span>, <span class="hljs-number">148</span>, <span class="hljs-number">62</span>, <span class="hljs-number">53</span>, <span class="hljs-number">24</span>, <span class="hljs-number">116</span>, <span class="hljs-number">244</span>, <span class="hljs-number">126</span>, <span class="hljs-number">63</span>, <span class="hljs-number">90</span> &#125;;<br><span class="hljs-built_in">string</span> text = ((TextBox)<span class="hljs-keyword">base</span>.Controls.Find(Form1.b(<span class="hljs-string">&quot;戕紗戙栛尝伟娡ᔣ&quot;</span>, a_), searchAllChildren: <span class="hljs-literal">false</span>)[<span class="hljs-number">0</span>]).Text;<br><span class="hljs-built_in">int</span>[] array2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">int</span>[] array3 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">10</span>];<br><span class="hljs-keyword">if</span> (text.Length == <span class="hljs-number">10</span>)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; text.Length; i++)<br>&#123;<br>array2[i] = text[i];<br><span class="hljs-built_in">byte</span> b = (<span class="hljs-built_in">byte</span>)((<span class="hljs-built_in">uint</span>)array2[i] &amp; <span class="hljs-number">7u</span>);<br><span class="hljs-built_in">byte</span> b2 = (<span class="hljs-built_in">byte</span>)((<span class="hljs-built_in">uint</span>)(array2[i] &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0xFF</span>u);<br>array3[i] = (b &lt;&lt; <span class="hljs-number">5</span>) | b2;<br>array3[i] ^= <span class="hljs-number">18</span>;<br><span class="hljs-keyword">if</span> (array3[i] != array[i])<br>&#123;<br>MessageBox.Show(Form1.b(<span class="hljs-string">&quot;䄕樗甙爛礝ğ&quot;</span>, a_));<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br>MessageBox.Show(Form1.b(<span class="hljs-string">&quot;䔕洗礙缛笝匟儡ԣ&quot;</span>, a_));<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>MessageBox.Show(Form1.b(<span class="hljs-string">&quot;䄕樗甙爛礝ğ&quot;</span>, a_));<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Dispose</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> disposing</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (disposing &amp;&amp; components != <span class="hljs-literal">null</span>)<br>&#123;<br>components.Dispose();<br>&#125;<br><span class="hljs-keyword">base</span>.Dispose(disposing);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">InitializeComponent</span>()</span><br>&#123;<br><span class="hljs-built_in">int</span> a_ = <span class="hljs-number">9</span>;<br><span class="hljs-keyword">this</span>.button1 = <span class="hljs-keyword">new</span> System.Windows.Forms.Button();<br><span class="hljs-keyword">this</span>.textBox1 = <span class="hljs-keyword">new</span> System.Windows.Forms.TextBox();<br><span class="hljs-keyword">base</span>.SuspendLayout();<br><span class="hljs-keyword">this</span>.button1.Location = <span class="hljs-keyword">new</span> System.Drawing.Point(<span class="hljs-number">88</span>, <span class="hljs-number">163</span>);<br><span class="hljs-keyword">this</span>.button1.Name = CrackmeApp.Form1.b(<span class="hljs-string">&quot;缜樞唠圢䨤䤦ᠨ&quot;</span>, a_);<br><span class="hljs-keyword">this</span>.button1.Size = <span class="hljs-keyword">new</span> System.Drawing.Size(<span class="hljs-number">110</span>, <span class="hljs-number">27</span>);<br><span class="hljs-keyword">this</span>.button1.TabIndex = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">this</span>.button1.Text = CrackmeApp.Form1.b(<span class="hljs-string">&quot;帜猞䠠䀢两樦䰨&quot;</span>, a_);<br><span class="hljs-keyword">this</span>.button1.UseVisualStyleBackColor = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">this</span>.button1.Click += <span class="hljs-keyword">new</span> System.EventHandler(button1_Click);<br><span class="hljs-keyword">this</span>.textBox1.Location = <span class="hljs-keyword">new</span> System.Drawing.Point(<span class="hljs-number">56</span>, <span class="hljs-number">67</span>);<br><span class="hljs-keyword">this</span>.textBox1.Name = CrackmeApp.Form1.b(<span class="hljs-string">&quot;検稞夠圢朤䠦儨ᨪ&quot;</span>, a_);<br><span class="hljs-keyword">this</span>.textBox1.Size = <span class="hljs-keyword">new</span> System.Drawing.Size(<span class="hljs-number">184</span>, <span class="hljs-number">21</span>);<br><span class="hljs-keyword">this</span>.textBox1.TabIndex = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">base</span>.ClientSize = <span class="hljs-keyword">new</span> System.Drawing.Size(<span class="hljs-number">284</span>, <span class="hljs-number">262</span>);<br><span class="hljs-keyword">base</span>.Controls.Add(<span class="hljs-keyword">this</span>.textBox1);<br><span class="hljs-keyword">base</span>.Controls.Add(<span class="hljs-keyword">this</span>.button1);<br><span class="hljs-keyword">base</span>.Name = CrackmeApp.Form1.b(<span class="hljs-string">&quot;嬜瀞匠丢ᐤ&quot;</span>, a_);<br><span class="hljs-keyword">this</span>.Text = CrackmeApp.Form1.b(<span class="hljs-string">&quot;帜洞䀠䀢两樦䰨&quot;</span>, a_);<br><span class="hljs-keyword">base</span>.ResumeLayout(<span class="hljs-literal">false</span>);<br><span class="hljs-keyword">base</span>.PerformLayout();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">b</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> A_0, <span class="hljs-built_in">int</span> A_1</span>)</span><br>&#123;<br><span class="hljs-built_in">char</span>[] array = A_0.ToCharArray();<br><span class="hljs-built_in">int</span> num = <span class="hljs-number">320078560</span> + A_1 + <span class="hljs-number">51</span>;<br><span class="hljs-built_in">int</span> num2 = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (num2 &gt;= <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">goto</span> IL_001a;<br>&#125;<br><span class="hljs-keyword">goto</span> IL_004d;<br>IL_004d:<br><span class="hljs-keyword">if</span> (num2 &gt;= array.Length)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Intern(<span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(array));<br>&#125;<br><span class="hljs-keyword">goto</span> IL_001a;<br>IL_001a:<br><span class="hljs-built_in">int</span> num3 = num2;<br><span class="hljs-built_in">char</span> num4 = array[num3];<br><span class="hljs-built_in">byte</span> b = (<span class="hljs-built_in">byte</span>)((num4 &amp; <span class="hljs-number">0xFF</span>u) ^ (<span class="hljs-built_in">uint</span>)num++);<br><span class="hljs-built_in">byte</span> b2 = (<span class="hljs-built_in">byte</span>)(((<span class="hljs-built_in">int</span>)num4 &gt;&gt; <span class="hljs-number">8</span>) ^ num++);<br><span class="hljs-built_in">byte</span> num5 = b2;<br>b2 = b;<br>b = num5;<br>array[num3] = (<span class="hljs-built_in">char</span>)((b2 &lt;&lt; <span class="hljs-number">8</span>) | b);<br>num2++;<br><span class="hljs-keyword">goto</span> IL_004d;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>python z3 模块一键梭哈</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">from</span> z3 import *<br><br>arr3 = [x ^ <span class="hljs-number">18</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-number">123</span>, <span class="hljs-number">148</span>, <span class="hljs-number">62</span>, <span class="hljs-number">53</span>, <span class="hljs-number">24</span>, <span class="hljs-number">116</span>, <span class="hljs-number">244</span>, <span class="hljs-number">126</span>, <span class="hljs-number">63</span>, <span class="hljs-number">90</span>]]<br><br>s = Solver()<br>flag_value = [BitVec((<span class="hljs-string">&quot;%d&quot;</span> % i), <span class="hljs-number">8</span>) <span class="hljs-function"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-title">range</span>(<span class="hljs-params"><span class="hljs-number">10</span></span>)]  # <span class="hljs-title">range</span>(<span class="hljs-params"><span class="hljs-number">32</span></span>) 是 flag_value 长度</span><br><span class="hljs-function"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-title">range</span>(<span class="hljs-params"><span class="hljs-number">10</span></span>):</span><br><span class="hljs-function">    s.<span class="hljs-title">add</span>(<span class="hljs-params">(((flag_value[i] &amp; <span class="hljs-number">7</span></span>) &lt;&lt; 5) | (<span class="hljs-params">(flag_value[i] &gt;&gt; <span class="hljs-number">3</span></span>) &amp; 255))</span> == arr3[i])<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">if</span> s.check() == sat:<br>    model = s.model()<br>    sorted_keys = sorted(model, key=lambda x: <span class="hljs-built_in">int</span>(x.name()))<br>    <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> sorted_keys:<br>        <span class="hljs-keyword">value</span> = model[key].as_long()<br>        flag += chr(<span class="hljs-keyword">value</span>)<br>        <span class="hljs-built_in">char</span> = chr(<span class="hljs-keyword">value</span>)<br>        print(f<span class="hljs-string">&quot;&#123;key&#125; = &#123;char&#125;&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    print(<span class="hljs-string">&quot;No solution&quot;</span>)<br>print(<span class="hljs-string">&quot;\n[+]--&gt;\t\t&quot;</span> + flag, end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-meta">#[+] flag--&gt;&gt; K4a9P37ciB</span><br></code></pre></td></tr></table></figure><h2 id="cpp"><a href="#cpp" class="headerlink" title="cpp"></a>cpp</h2><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1688781084572-c47b1ad7-c085-4321-858e-b628ef7bc339.png" alt="image.png" title="image.png"> 一段 key 和enc[abi:cxx11] 进行判断</p><p><code>enc[abi:cxx11], &quot;#!&#39;&quot;&#39;&#39;%+-&amp;##&quot;&amp;&#39;.&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1688783364243-97e53af0-5feb-4e15-8bf1-a530060120e3.png" alt="image.png" title="image.png"> <img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1688783432060-2cd86dcf-14e7-4f36-87a8-2fd66ab684b8.png" alt="image.png" title="image.png"> 加密逻辑 z3 一把梭哈</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><br>arr3 = [<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">22</span>,<span class="hljs-number">18</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">22</span>,<span class="hljs-number">18</span>,<span class="hljs-number">17</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">18</span>,<span class="hljs-number">24</span>]<br><br>arr1  = [<span class="hljs-number">0x23</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x2E</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(arr1))<br>s = Solver()<br>flag_value = [BitVec((<span class="hljs-string">&quot;%d&quot;</span> % i), <span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]  <span class="hljs-comment"># range(32) 是 flag_value 长度</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    s.add(((flag_value[i] ^ arr3[i] )) == arr1[i])<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">if</span> s.check() == sat:<br>    model = s.model()<br>    sorted_keys = <span class="hljs-built_in">sorted</span>(model, key=<span class="hljs-keyword">lambda</span> x: <span class="hljs-built_in">int</span>(x.name()))<br>    <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> sorted_keys:<br>        value = model[key].as_long()<br>        flag += <span class="hljs-built_in">chr</span>(value)<br>        char = <span class="hljs-built_in">chr</span>(value)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;key&#125;</span> = <span class="hljs-subst">&#123;char&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No solution&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n[+]--&gt;\t\t&quot;</span> + flag, end=<span class="hljs-string">&quot;&quot;</span>)<br><br><br><br><span class="hljs-comment">#[+]--&gt; flag 1234567890123456</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/1688783517564-e42507ad-1f90-40f0-b88d-3709549c18ab.png" alt="image.png" title="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse_wp iscc_2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 逆向wp </tag>
            
            <tag> reverse </tag>
            
            <tag> iscc_2023 </tag>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf&amp;&amp;RE&amp;&amp;前12道题</title>
      <link href="/2023/01/16/buuctf&amp;&amp;RE&amp;&amp;%E5%89%8D12%E9%81%93%E9%A2%98/"/>
      <url>/2023/01/16/buuctf&amp;&amp;RE&amp;&amp;%E5%89%8D12%E9%81%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="buuctf-RE-前12道题"><a href="#buuctf-RE-前12道题" class="headerlink" title="buuctf&amp;&amp;RE&amp;&amp;前12道题"></a>buuctf&amp;&amp;RE&amp;&amp;前12道题</h1><p>本文章用到的工具</p><p>die下载地址 ：<a href="https://github.com/horsicq/DIE-engine/releases">https://github.com/horsicq/DIE-engine/releases</a></p><p>exeinfo下载地址 ： <a href="https://github.com/ExeinfoASL/ASL/blob/master/exeinfope.zip">https://github.com/ExeinfoASL/ASL/blob/master/exeinfope.zip</a></p><p>idapro下载地址：<a href="https://www.123pan.com/s/mCY8Vv-q4hWd.html">https://www.123pan.com/s/mCY8Vv-q4hWd.html</a><br>            提取码:HUA0</p><p>jadx-gui 下载地址 <a href="https://github.com/skylot/jadx/releases/tag/v1.4.6">https://github.com/skylot/jadx/releases/tag/v1.4.6</a></p><p>apkidc下载地址：<a href="https://down.52pojie.cn/?query=apkid">https://down.52pojie.cn/?query=apkid</a></p><p>仅用于学习</p><h2 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h2><p>用die分析一下</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623153705178.png" alt="image-20220623153705178"></p><p>使用ida64打开easyre.exe</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154005125.png" alt="image-20220623154005125"></p><h2 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154250990.png" alt="image-20220623154250990"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154343804.png" alt="image-20220623154343804"></p><p>shift+f12</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154505781.png" alt="image-20220623154505781"></p><p>异或</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154611201.png" alt="image-20220623154611201"></p><p>双击进入</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220623154755679.png" alt="image-20220623154755679"></p><p>可以看到 lea 取 rcx str2 为 {hello_world}</p><p>让后f5反编译查看伪代码</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624093942025.png" alt="image-20220624093942025"></p><p>将：{hello_world}</p><p>替换o为0</p><h2 id="reverse2"><a href="#reverse2" class="headerlink" title="reverse2"></a>reverse2</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624094219719.png" alt="image-20220624094219719"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624094330853.png" alt="image-20220624094330853"></p><p>直接f5反编译</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624094434960.png" alt="image-20220624094434960"></p><p>让后shift+f12</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624094808804.png" alt="image-20220624094808804"></p><p>暂时存储一下</p><p>将 eax 取内存 {hacking_for_fun}</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624094942907.png" alt="image-20220624094942907"></p><p>返回看到</p><p>eax, byte ptr flag[rax]</p><p>回到刚刚反编译的伪代码</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624095247209.png" alt="image-20220624095247209"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624100011427.png" alt="image-20220624100011427"></p><p>将 ：{hacking_for_fun}</p><p>i和r替换为1</p><h2 id="内涵的软件"><a href="#内涵的软件" class="headerlink" title="内涵的软件"></a>内涵的软件</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624101137339.png" alt="image-20220624101137339"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624103234143.png" alt="image-20220624103234143"></p><p>双击进入main_0</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624103334318.png" alt="image-20220624103334318"></p><p>直接flag</p><h2 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220624174141942.png" alt="image-20220624174141942"></p><p>upx加密使用工具去壳 or 动态od 脱壳</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625093823581.png" alt="image-20220625093823581"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625093846273.png" alt="image-20220625093846273"></p><p>idapro32打开就是flag</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625094025841.png" alt="image-20220625094025841"></p><h2 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625095455799.png" alt="image-20220625095455799"></p><p>无壳64位mac 软件 ida64pro打开直接f5反编译</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625100109897.png" alt="image-20220625100109897"></p><p>双金进入global</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625100214564.png" alt="image-20220625100214564"><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625100627931.png" alt="image-20220625100627931"></p><p>双击进入里面</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625100919422.png" alt="image-20220625100919422">复制一份到剪贴板</p><p>让后shift+e</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625101033616.png" alt="image-20220625101033616"></p><p>转换为数组</p><p>密文[0x66, 0x0A, 0x6B, 0x0C, 0x77, 0x26, 0x4F, 0x2E, 0x40, 0x11, 0x78, 0x0D, 0x5A, 0x3B, 0x55, 0x11, 0x70, 0x19, 0x46, 0x1F, 0x76, 0x22, 0x4D, 0x23, 0x44, 0x0E, 0x67, 0x06, 0x68, 0x0F, 0x47, 0x32, 0x4F, 0x00]</p><p>xor异或 密文 依次-1让后得到flag</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">cipher = <span class="hljs-selector-attr">[0x66, 0x0A, 0x6B, 0x0C, 0x77, 0x26, 0x4F, 0x2E, 0x40, 0x11, 0x78, 0x0D, 0x5A, 0x3B, 0x55, 0x11, 0x70, 0x19, 0x46, 0x1F, 0x76, 0x22, 0x4D, 0x23, 0x44, 0x0E, 0x67, 0x06, 0x68, 0x0F, 0x47, 0x32, 0x4F, 0x00]</span><br>cipher_text=<span class="hljs-selector-attr">[0]</span> *<span class="hljs-built_in">len</span>(cipher)<br><br>result = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(cipher) -<span class="hljs-number">1</span>):<br>    result += <span class="hljs-built_in">chr</span>(cipher<span class="hljs-selector-attr">[i]</span> ^ cipher<span class="hljs-selector-attr">[i-1]</span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(chr(cipher[<span class="hljs-number">0</span>])</span></span>+result)<br>#flag&#123;QianQiuWanDai_YiTongJiangHu&#125;<br></code></pre></td></tr></table></figure><h2 id="helloword"><a href="#helloword" class="headerlink" title="helloword"></a>helloword</h2><p>下载下来是个apk使用apkide打开</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625105637665.png" alt="image-20220625105637665"></p><p>依次打开smali&gt;com&gt;example&gt;helloword&gt;MainActivity.smali</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625105737705.png" alt="image-20220625105737705"></p><p>flag出来</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625105835945.png" alt="image-20220625105835945"></p><h2 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625110529049.png" alt="image-20220625110529049"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20220625110838140.png" alt="image-20220625110838140"></p><p>双击进入_main_0</p><p>f5查看伪代码</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316203948983.png" alt="image-20230316203948983"></p><p>让后进去str2找到密文<code>e3nifIH9b_C@n@dH</code></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316203853019.png" alt="image-20230316203853019"></p><p> 先base64 在异或+- 逆向倒着来写出脚本</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import base64<br>cipher = <span class="hljs-string">&#x27;e3nifIH9b_C@n@dH&#x27;</span><br>result =<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>    result +=<span class="hljs-built_in">chr</span>( <span class="hljs-built_in">ord</span>(cipher<span class="hljs-selector-attr">[i]</span>) - i)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(base64.b64decode(result)</span></span>)<br>#flag&#123;i_l0ve_you&#125;<br></code></pre></td></tr></table></figure><p><code>flag&#123;i_l0ve_you&#125;</code></p><h2 id="不一样的flag"><a href="#不一样的flag" class="headerlink" title="不一样的flag"></a>不一样的flag</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316204307860.png" alt="image-20230316204307860"></p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316204332415.png" alt="image-20230316204332415"></p><p>查看无壳</p><p>ida32 打开直接就是main </p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316204430912.png" alt="image-20230316204430912"></p><p>看到上写左右和一堆有规则的字符串猜测迷宫题目</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs hsp"><span class="hljs-symbol">*11110100001010000101111</span><span class="hljs-meta"># 源字符串</span><br><br><span class="hljs-symbol">*1111</span><br><span class="hljs-number">01000</span><br><span class="hljs-number">01010</span><br><span class="hljs-number">00010</span><br><span class="hljs-number">1111</span><span class="hljs-meta">#</span><br>修改后<br><br><br>控制器<br><br><span class="hljs-number">1</span> up 上<br><span class="hljs-number">2</span> down 下<br><span class="hljs-number">3</span> left 坐<br><span class="hljs-number">4</span> right 右<br></code></pre></td></tr></table></figure><p><code> flag&#123;222441144222&#125;</code></p><h2 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h2><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316204930805.png" alt="image-20230316204930805"></p><p>查克不存在发现是Linux 64位程序</p><p>让后使用ida64 打开调试发现 不行</p><p>一直都不能运行</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316205029585.png" alt="image-20230316205029585"></p><p>让后</p><p>使用ida静态分析</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs smali">v11 = __readfsqword(0x28u);<br>  *(_QWORD *)src = &#x27;S<span class="hljs-class">LCDN&#x27;;</span>                     // NDCLS<br>  v7 = 0<span class="hljs-class">LL;</span><br>  v8 = 0;<br>  v9[0] = &#x27;wodah&#x27;;                              // hadow<br>  v9[1] = 0<span class="hljs-class">LL;</span><br>  v10 = 0;<br>  text = join(key3, (const char *)v9);          // text = killshadow<br>  strcpy(key, key1);                            // ADSFK<br>  strcat(key, src);                             // key = ADSFKDNLCS 错<br>                                                // 大小端序<br>                                                // key = ADSFKNDCLS 对<br>  v2 = 0;<br>  v3 = 0;<br>  getchar();<br>  v5 = strlen(key);                             // 长度给v5<br>  for ( i = 0; i &lt; v5; ++i )<br>  &#123;<br>   <span class="hljs-built_in"> if </span>( key[v3 % v5] &gt; 64 &amp;&amp; key[v3 % v5] &lt;= 90 )// 将大写转换为小写<br>      key[i] = key[v3 % v5] + 32;<br>    ++v3;<br>  &#125;<br>  printf(<span class="hljs-string">&quot;Please input your flag:&quot;</span>);<br>  while ( 1 )<br>  &#123;<br>    v1 = getchar();                             // 缓冲<br>   <span class="hljs-built_in"> if </span>( v1 == &#x27;\n&#x27; )                           // 输入回车退出<br>      break;<br>   <span class="hljs-built_in"> if </span>( v1 == &#x27; &#x27; )                            // 输入 v2加1<br>    &#123;<br>      ++v2;<br>    &#125;<br>    else<br>    &#123;<br>     <span class="hljs-built_in"> if </span>( v1 &lt;= 96 || v1 &gt; 122 )               // v1 小写<br>      &#123;<br>       <span class="hljs-built_in"> if </span>( v1 &gt; 64 &amp;&amp; v1 &lt;= 90 )              // v1大写<br>        &#123;<br>          str2[v2] = (v1 - 39 - key[v3 % v5] + 97) % 26 + 97;// 算法<br>          ++v3;<br>        &#125;<br>      &#125;<br>      else<br>      &#123;<br>        str2[v2] = (v1 - 39 - key[v3 % v5] + 97) % 26 + 97;<br>        ++v3;<br>      &#125;<br>     <span class="hljs-built_in"> if </span>( !(v3 % v5) )<br>        putchar(32);<br>      ++v2;<br>    &#125;<br>  &#125;<br> <span class="hljs-built_in"> if </span>( !strcmp(text, str2) )<br>    puts(<span class="hljs-string">&quot;Congratulation!\n&quot;</span>);<br>  else<br>    puts(<span class="hljs-string">&quot;Try again!\n&quot;</span>);<br> <span class="hljs-built_in"> return </span>__readfsqword(0x28u) ^ v11;<br>&#125;<br></code></pre></td></tr></table></figure><p>让写出脚本</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs maxima">import <span class="hljs-built_in">string</span><br><br>cipher = <span class="hljs-string">&quot;killshadow&quot;</span><br><span class="hljs-built_in">key</span> = <span class="hljs-string">&quot;ADSFKNDCLS&quot;</span><br><span class="hljs-built_in">key</span> = str.lower(<span class="hljs-built_in">key</span>)  # 转换小写<br>result = []<br>dic = <span class="hljs-built_in">string</span>.ascii_uppercase + <span class="hljs-built_in">string</span>.ascii_letters  # 字典<br><br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(len(cipher)):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> dic:<br>        <span class="hljs-keyword">if</span> (ord(j) - <span class="hljs-number">39</span> - ord(<span class="hljs-built_in">key</span>[i]) + <span class="hljs-number">97</span>) <span class="hljs-symbol">%</span> <span class="hljs-number">26</span> + <span class="hljs-number">97</span> == ord(cipher[i]):<br>            result.<span class="hljs-built_in">append</span>(j)<br>            <span class="hljs-built_in">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;&quot;</span> + <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-built_in">join</span>(result) + <span class="hljs-string">&quot;&#125;&quot;</span>)<br># flag&#123;KLDQCUDFZO&#125;<br></code></pre></td></tr></table></figure><p><code>flag&#123;KLDQCUDFZO&#125;</code></p><h2 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h2><p>是一个.class文件使用jadx-gui 打开</p><p>看到encode </p><p>让后进入</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316205348723.png" alt="image-20230316205348723"></p><p>写出逆向脚本 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">cipher = [<span class="hljs-number">180</span>, <span class="hljs-number">136</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">148</span>, <span class="hljs-number">136</span>, <span class="hljs-number">133</span>, <span class="hljs-number">191</span>, <span class="hljs-number">134</span>, <span class="hljs-number">140</span>, <span class="hljs-number">129</span>, <span class="hljs-number">135</span>, <span class="hljs-number">191</span>, <span class="hljs-number">65</span>]<br><br>key = [<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(cipher)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>    key[i] = <span class="hljs-built_in">chr</span>(cipher[i] - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;@&#x27;</span>) ^ <span class="hljs-number">32</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(key))<br><span class="hljs-comment">#flag&#123;This_is_the_flag_!&#125;</span><br></code></pre></td></tr></table></figure><p><code>#flag&#123;This_is_the_flag_!&#125;</code></p><h2 id="GXYCTF2019-luck-guy"><a href="#GXYCTF2019-luck-guy" class="headerlink" title="[GXYCTF2019]luck_guy"></a>[GXYCTF2019]luck_guy</h2><p>使用die 工具查壳 发现是64位 无壳子使用ida64 pro 打开</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316221550448.png" alt="image-20230316221550448"></p><p>默认进入main 函数 让后发现没有什么操作直接去patch_me –&gt; get-flag</p><p><img src="https://fastly.jsdelivr.net/gh/huajien/picgo@master/img/image-20230316223527577.png" alt="image-20230316223527577"></p><p>密文<code>[105, 99, 117, 103, 96, 111, 102, 127] </code></p><p>让后写出脚本</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">cipher = [<span class="hljs-number">105</span>, <span class="hljs-number">99</span>, <span class="hljs-number">117</span>, <span class="hljs-number">103</span>, <span class="hljs-number">96</span>, <span class="hljs-number">111</span>, <span class="hljs-number">102</span>, <span class="hljs-number">127</span>] <br><span class="hljs-built_in">result</span> = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-built_in">len</span>(cipher)):<br>    <span class="hljs-keyword">if</span> i % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">result</span> += chr(cipher[i] <span class="hljs-number">-2</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">result</span> += chr(cipher[i] <span class="hljs-number">-1</span>)<br>print(<span class="hljs-built_in">result</span>)<br><span class="hljs-comment">#GXY&#123;do_not_hate_me&#125;</span><br></code></pre></td></tr></table></figure><p><code>GXY&#123;do_not_hate_me&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> Reverse_wp buuctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buuctf </tag>
            
            <tag> ctf </tag>
            
            <tag> 逆向wp </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ida pro 7.5 使用ipython Byte报错问题解决</title>
      <link href="/2022/11/13/idapro7.5%E4%BD%BF%E7%94%A8ipython%20Byte%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2022/11/13/idapro7.5%E4%BD%BF%E7%94%A8ipython%20Byte%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="ida-pro-7-5-使用ipython-Byte报错问题解决"><a href="#ida-pro-7-5-使用ipython-Byte报错问题解决" class="headerlink" title="ida pro 7.5 使用ipython Byte报错问题解决"></a>ida pro 7.5 使用ipython Byte报错问题解决</h1><p>这两天使用ida 发现ipython代码无法运行</p><p>比如PatchByte()，Byte()都提示<br>NameError: name ‘Byte’ is not defined<br>又舍不得放弃7.5(一些题目拿7.5版生成的伪代码比7.0版要好看的多)，<br>于是在网上查了很久，找出了解决办法。</p><h2 id="方法1-兼容办法-："><a href="#方法1-兼容办法-：" class="headerlink" title="方法1(兼容办法)："></a><strong>方法1</strong>(兼容办法)：</h2><p>其次是在比较方便的在7.5用7.0API办法，来源：<a href="https://github.com/0xgalz/Virtuailor/issues/8">https://github.com/0xgalz/Virtuailor/issues/8</a><br>在代码面前：<br>from idc_bc695 import *<br>即可。</p><h2 id="方法2-一劳永逸版-："><a href="#方法2-一劳永逸版-：" class="headerlink" title="方法2(一劳永逸版)："></a><strong>方法2</strong>(一劳永逸版)：</h2><p>来源官方文档：<a href="https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695.shtml">https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695.shtml</a><br>找到</p><ul><li>~&#x2F;.idapro&#x2F;cfg&#x2F;idapython.cfg (Linux)</li><li>%APPDATA%\Hex-Rays\IDA Pro\cfg\idapython.cfg (Windows) (绿色版的话在程序目录下那个cfg文件夹里)</li></ul><p>把AUTOIMPORT_COMPAT_IDA695改为YES</p><p>文章来源 <a href="https://www.52pojie.cn/thread-1403005-1-1.html">52pojie论坛用户神慯</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常小问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idapro </tag>
            
            <tag> ipython </tag>
            
            <tag> ida脚本问题 </tag>
            
            <tag> 日常日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF X GFCTF 2022十月挑战赛！</title>
      <link href="/2022/10/24/DASCTF%20X%20GFCTF%202022%E5%8D%81%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B%EF%BC%81/"/>
      <url>/2022/10/24/DASCTF%20X%20GFCTF%202022%E5%8D%81%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h1 id="DASCTF-X-GFCTF-2022十月挑战赛！"><a href="#DASCTF-X-GFCTF-2022十月挑战赛！" class="headerlink" title="DASCTF X GFCTF 2022十月挑战赛！"></a>DASCTF X GFCTF 2022十月挑战赛！</h1><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="贪玩CTF"><a href="#贪玩CTF" class="headerlink" title="贪玩CTF"></a>贪玩CTF</h3><p>die看无壳 64位</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023225242453.png" alt="image-20221023225242453"></p><p>使用ida64动态调试发现自动退出</p><p>发现TlsCallback_0 在start函数前面执行</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023225905176.png" alt="image-20221023225905176"></p><p>把call    cs:IsDebuggerPresent nop掉</p><p>并把 jz patch 换成jnz</p><p>如下图</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023230137420.png" alt="image-20221023230137420"></p><p>可以正常调试了</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023230339130.png" alt="image-20221023230339130"></p><p>shift+f12看字符串</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023230518151.png" alt="image-20221023230518151"></p><p>进去 ctrl + x 数据的交叉引用 静态分析</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023231430104.png" alt="image-20221023231430104"></p><p>进入sub_7FF6ED1619C0 函数</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023231725807.png" alt="image-20221023231725807"></p><p>长度如果不等于16 返回 -1 得到是账户是 是16位</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023231835581.png" alt="image-20221023231835581"></p><p>返回-1 弹出 弹窗 字符长长度不对</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221023233439701.png" alt="image-20221023233439701"></p><p>和上面一样密码也是16位 否则返回 -1 然后提示框 长度不对</p><p>让后我随便输入16个账户和16个密码</p><p>最下面有异或</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024002114932.png" alt="image-20221024002114932"></p><p>下面的判断给他断下来按tab转汇编窗口</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024001716092.png" alt="image-20221024001716092"></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024002040359.png" alt="image-20221024002040359"></p><p>双击进入rsi寄存器</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024002149163.png" alt="image-20221024002149163"></p><p>提取</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024002343866.png" alt="image-20221024002343866"></p><p>编写脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python3">str1 = [   0x04, 0x1F, 0x1F, 0x1E, 0x43, 0x4B, 0x43, 0x45, 0x44, 0x00, 0x16, 0x10, 0x55, 0x17, 0x12, 0x73]<br>str2= &#x27;&#x27;<br>for i in range(len(str1) -1):<br>    str2 += chr(str1[i] ^ 0x73)<br>str2 += chr(0x73)<br>print(str2)<br></code></pre></td></tr></table></figure><p>账户：wllm08067sec&amp;das</p><p>分析密码进入 sub_7FF6ED161390函数</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024002614641.png" alt="image-20221024002614641"></p><p>进入 byte_7FF6ED166040 字节</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024004933249.png" alt="image-20221024004933249"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">63h</span>, <span class="hljs-number">7</span>Ch, <span class="hljs-number">77</span>h, <span class="hljs-number">7</span>Bh, <span class="hljs-number">0</span>F2h, <span class="hljs-number">6</span>Bh, <span class="hljs-number">6</span>Fh, <span class="hljs-number">0</span>C5h, <span class="hljs-number">30</span>h, <span class="hljs-number">1</span>, <span class="hljs-number">67</span>h, <span class="hljs-number">2</span>Bh, <span class="hljs-number">0</span>FEh, <span class="hljs-number">0</span>D7h<br></code></pre></td></tr></table></figure><p>​aes加密 特征</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024010824134.png" alt="image-20221024010824134"></p><p>根据上面猜测上面的buffer应该是密钥</p><p>密钥：wllm08067sec&amp;das</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024100831027.png" alt="image-20221024100831027"></p><p>让后跳出往下走</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024100354185.png" alt="image-20221024100354185"></p><p>byte_7FF6ED166990[v18] 是自己输入的密码 </p><p>byte_7FF6ED1643D8[v18] 是aes加密后的密码</p><p>提取byte_7FF6ED1643D8[v18] 里面的字符</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024101025399.png" alt="image-20221024101025399"></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024101047770.png" alt="image-20221024101047770"></p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">\x3C\x97\x72\x96\x5A\x33\x63\x9C\x97\x30\x4D\x90\x84\xE8\x5F\x56<br></code></pre></td></tr></table></figure><p>让后我们找个在线aes 解密<a href="https://the-x.cn/cryptography/Aes.aspx">https://the-x.cn/cryptography/Aes.aspx</a></p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024101439316.png" alt="image-20221024101439316"></p><p>账户是：wllm08067sec&amp;das</p><p>密码是：e4deb7a6510a10f7</p><p><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/image-20221024101605649.png" alt="image-20221024101605649"></p><p>flag 格式为DASCTF{账号+密码}</p><p>DASCTF{wllm08067sec&amp;dase4deb7a6510a10f7}</p>]]></content>
      
      
      <categories>
          
          <category> Reverse_wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DASCTF </tag>
            
            <tag> 2022十月挑战赛 </tag>
            
            <tag> 贪玩CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编 JCC指令表</title>
      <link href="/2022/08/02/%E6%B1%87%E7%BC%96%20JCC%E6%8C%87%E4%BB%A4%E8%A1%A8/"/>
      <url>/2022/08/02/%E6%B1%87%E7%BC%96%20JCC%E6%8C%87%E4%BB%A4%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="汇编-JCC指令表"><a href="#汇编-JCC指令表" class="headerlink" title="汇编 JCC指令表"></a>汇编 JCC指令表</h1><h3 id="JCC指条件跳转指令，CC就是指条件码。"><a href="#JCC指条件跳转指令，CC就是指条件码。" class="headerlink" title="JCC指条件跳转指令，CC就是指条件码。"></a>JCC指条件跳转指令，CC就是指条件码。</h3><table><thead><tr><th>JCC指令</th><th>中文含义</th><th>英文原意</th><th>检查符号位</th><th>典型c应用</th></tr></thead><tbody><tr><td>JZ&#x2F;JE</td><td>若为0则跳转；若相等则跳转</td><td>jump if zero;jump if equal</td><td>ZF&#x3D;1</td><td>if (i &#x3D;&#x3D; j);if (i &#x3D;&#x3D; 0);</td></tr><tr><td>JNZ&#x2F;JNE</td><td>若不为0则跳转；若不相等则跳转</td><td>jump if not zero;jump if not equal</td><td>ZF&#x3D;0</td><td>if (i !&#x3D; j);if (i !&#x3D; 0);</td></tr><tr><td>JS</td><td>若为负则跳转</td><td>jump if sign</td><td>SF&#x3D;1</td><td>if (i &lt; 0);</td></tr><tr><td>JNS</td><td>若为正则跳转</td><td>jump if not sign</td><td>SF&#x3D;0</td><td>if (i &gt; 0);</td></tr><tr><td>JP&#x2F;JPE</td><td>若1出现次数为偶数则跳转</td><td>jump if Parity (Even)</td><td>PF&#x3D;1</td><td>(null)</td></tr><tr><td>JNP&#x2F;JPO</td><td>若1出现次数为奇数则跳转</td><td>jump if not parity (odd)</td><td>PF&#x3D;0</td><td>(null)</td></tr><tr><td>JO</td><td>若溢出则跳转</td><td>jump if overflow</td><td>OF&#x3D;1</td><td>(null)</td></tr><tr><td>JNO</td><td>若无溢出则跳转</td><td>jump if not overflow</td><td>OF&#x3D;0</td><td>(null)</td></tr><tr><td>JC&#x2F;JB&#x2F;JNAE</td><td>若进位则跳转；若低于则跳转；若不高于等于则跳转</td><td>jump if carry;jump if below;jump if not above equal</td><td>CF&#x3D;1</td><td>if (i &lt; j);</td></tr><tr><td>JNC&#x2F;JNB&#x2F;JAE</td><td>若无进位则跳转；若不低于则跳转；若高于等于则跳转</td><td>jump if not carry;jump if not below;jump if above equal</td><td>CF&#x3D;0</td><td>if (i &gt;&#x3D; j);</td></tr><tr><td>JBE&#x2F;JNA</td><td>若低于等于则跳转；若不高于则跳转</td><td>jump if below equal;jump if not above</td><td>ZF&#x3D;1或CF&#x3D;1</td><td>if (i &lt;&#x3D; j);</td></tr><tr><td>JNBE&#x2F;JA</td><td>若不低于等于则跳转；若高于则跳转</td><td>jump if not below equal;jump if above</td><td>ZF&#x3D;0或CF&#x3D;0</td><td>if (i &gt; j);</td></tr><tr><td>JL&#x2F;JNGE</td><td>若小于则跳转；若不大于等于则跳转</td><td>jump if less;jump if not greater equal</td><td>SF !&#x3D; OF</td><td>if (si &lt; sj);</td></tr><tr><td>JNL&#x2F;JGE</td><td>若不小于则跳转；若大于等于则跳转</td><td>jump if not less;jump if greater equal</td><td>SF&#x3D;OF</td><td>if (si &gt;&#x3D; sj);</td></tr><tr><td>JLE&#x2F;JNG</td><td>若小于等于则跳转；若不大于则跳转</td><td>jump if less equal;jump if not greater</td><td>ZF !&#x3D; OF 或 ZF&#x3D;1</td><td>if (si &lt;&#x3D; sj);</td></tr><tr><td>JNLE&#x2F;JG</td><td>若不小于等于则跳转；若大于则跳转</td><td>jump if not less equal;jump if greater</td><td>SF&#x3D;OF 且 ZF&#x3D;0</td><td>if(si&gt;sj)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 32位汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编跳转 </tag>
            
            <tag> 跳转指令 </tag>
            
            <tag> jcc </tag>
            
            <tag> je </tag>
            
            <tag> jc </tag>
            
            <tag> jb </tag>
            
            <tag> ja </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win_xp配置双机调试</title>
      <link href="/2022/05/14/xp%E6%90%AD%E5%BB%BA%E5%8F%8C%E5%87%BB%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/05/14/xp%E6%90%AD%E5%BB%BA%E5%8F%8C%E5%87%BB%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="xp配置双机调试"><a href="#xp配置双机调试" class="headerlink" title="xp配置双机调试"></a>xp配置双机调试</h2><h3 id="先安装Windows-xp-系统让后"><a href="#先安装Windows-xp-系统让后" class="headerlink" title="先安装Windows xp 系统让后"></a>先安装Windows xp 系统让后</h3><p>在C盘目录下有一个 boot.ini 文件，默认情况下的配置如下</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[boot loader]</span><br><span class="hljs-attr">timeout</span>=<span class="hljs-number">30</span><br><span class="hljs-attr">default</span>=multi(<span class="hljs-number">0</span>)disk(<span class="hljs-number">0</span>)rdisk(<span class="hljs-number">0</span>)partition(<span class="hljs-number">1</span>)\WINDOWS<br><span class="hljs-section">[operating systems]</span><br>multi(0)disk(0)rdisk(0)partition(1)\<span class="hljs-attr">WINDOWS</span>=<span class="hljs-string">&quot;Microsoft Windows XP Professional&quot;</span><br>/<span class="hljs-attr">noexecute</span>=optin /fastdetect<br><br>//增加两行，在32位环境下有2种分页模式，1种为 2-9-9-12 ，1种为 10-10-12<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[boot loader]</span><br><span class="hljs-attr">timeout</span>=<span class="hljs-number">30</span><br><span class="hljs-attr">default</span>=multi(<span class="hljs-number">0</span>)disk(<span class="hljs-number">0</span>)rdisk(<span class="hljs-number">0</span>)partition(<span class="hljs-number">1</span>)\WINDOWS<br><span class="hljs-section">[operating systems]</span><br>multi(0)disk(0)rdisk(0)partition(1)\<span class="hljs-attr">WINDOWS</span>=<span class="hljs-string">&quot;XP Debug[2-9-9-12]&quot;</span> /noexecute=optin /fastdetect /debug /debugport=com1<br>multi(0)disk(0)rdisk(0)partition(1)\<span class="hljs-attr">WINDOWS</span>=<span class="hljs-string">&quot;XP Debug[10-10-12]&quot;</span> /execute=optin /fastdetect /debug /debugport=com1<br>multi(0)disk(0)rdisk(0)partition(1)\<span class="hljs-attr">WINDOWS</span>=<span class="hljs-string">&quot;Microsoft Windows XP Professional&quot;</span> /noexecute=optin /fastdetect<br></code></pre></td></tr></table></figure><h4 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h4><p>让后删除虚拟机的打印机<br>打印机会占用一个串口<br><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309270852306.png" alt="image-20230927085255214"></p><p><code>\\.\pipe\com_1</code><br><img src="https://cdn.jsdelivr.net/gh/huajien/picgo@master/img/202309270856105.png" alt="image-20230927085255214"></p><h3 id="windbg"><a href="#windbg" class="headerlink" title="windbg"></a>windbg</h3><p>安装windbg 后配置</p><p><code>windbg绝对路径&quot; -b -k com:pipe,port=\\.\pipe\com_1,resets=0</code></p><p>启动Windows xp</p><p>选择debug模式</p><p>启动配置好的快捷方式</p><p>完结撒花！！！</p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> 双机调试 </tag>
            
            <tag> Windows xp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言中的标志位</title>
      <link href="/2022/04/05/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%A0%87%E5%BF%97%E4%BD%8D/"/>
      <url>/2022/04/05/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%A0%87%E5%BF%97%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="汇编中的：CF、PF、AF、ZF、SF、TF、IF、DF、OF标志位"><a href="#汇编中的：CF、PF、AF、ZF、SF、TF、IF、DF、OF标志位" class="headerlink" title="汇编中的：CF、PF、AF、ZF、SF、TF、IF、DF、OF标志位"></a>汇编中的：CF、PF、AF、ZF、SF、TF、IF、DF、OF标志位</h2><h3 id="CF-进位标志位"><a href="#CF-进位标志位" class="headerlink" title="CF:进位标志位"></a><strong>CF</strong>:进位标志位</h3><p>在无符号运算时，记录了运算结果的最高有效位向更高位的进位值或从更高位借位，产生进位或借位时CF&#x3D;1，否则CF&#x3D;0；</p><h3 id="PF-奇偶标志位"><a href="#PF-奇偶标志位" class="headerlink" title="PF:奇偶标志位"></a><strong>PF</strong>:奇偶标志位</h3><p>相关指令执行后结果所有bit中1的个数为偶数，那么PF&#x3D;1，1的个数为奇数则PF&#x3D;0；</p><h3 id="AF-辅助进位标志位"><a href="#AF-辅助进位标志位" class="headerlink" title="AF:辅助进位标志位"></a><strong>AF</strong>:辅助进位标志位</h3><p>运算过程中看最后四位，不论长度为多少。最后四位向前有进位或者借位，AF&#x3D;1,否则AF&#x3D;0;</p><h3 id="ZF-零标志位"><a href="#ZF-零标志位" class="headerlink" title="ZF:零标志位"></a><strong>ZF</strong>:零标志位</h3><p>相关指令执行后结果为0那么ZF&#x3D;1,结果不为0则ZF&#x3D;0；</p><h3 id="SF-符号标志位"><a href="#SF-符号标志位" class="headerlink" title="SF:符号标志位"></a><strong>SF</strong>:符号标志位</h3><p>相关指令执行后结果为负那么SF&#x3D;1，结果非负数则SF&#x3D;0；</p><h3 id="TF-调试标志位"><a href="#TF-调试标志位" class="headerlink" title="TF:调试标志位"></a><strong>TF</strong>:调试标志位</h3><p>当TF&#x3D;1时，处理器每次只执行一条指令，即单步执行;</p><h3 id="IF-中断允许标志位"><a href="#IF-中断允许标志位" class="headerlink" title="IF:中断允许标志位"></a><strong>IF</strong>:中断允许标志位</h3><p>它用来控制8086是否允许接收外部中断请求。若IF&#x3D;1，8086能响应外部中断，反之则屏蔽外部中断;</p><h3 id="DF-方向标志位"><a href="#DF-方向标志位" class="headerlink" title="DF:方向标志位"></a><strong>DF</strong>:方向标志位</h3><p>在串处理指令中，每次操作后，如果DF&#x3D;0，si、di递增，如果DF&#x3D;1，si、di递减；注意此处DF的值是由程序员进行设定的 cld命令是将DF设置为0，std命令是将DF设置为1；</p><h3 id="OF-溢出标志位"><a href="#OF-溢出标志位" class="headerlink" title="OF:溢出标志位"></a><strong>OF</strong>:溢出标志位</h3><p>记录了有符号运算的结果是否发生了溢出，如果发生溢出OF&#x3D;1,如果没有OF&#x3D;0；</p>]]></content>
      
      
      <categories>
          
          <category> 32位汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编标志位 </tag>
            
            <tag> CF </tag>
            
            <tag> PF </tag>
            
            <tag> AF </tag>
            
            <tag> ZF </tag>
            
            <tag> SF </tag>
            
            <tag> TF </tag>
            
            <tag> IF </tag>
            
            <tag> DF </tag>
            
            <tag> OF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三届xcitc-ctf招新赛部分题解</title>
      <link href="/2021/10/13/%E7%AC%AC%E4%B8%89%E5%B1%8Axcitc-ctf%E6%8B%9B%E6%96%B0%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/10/13/%E7%AC%AC%E4%B8%89%E5%B1%8Axcitc-ctf%E6%8B%9B%E6%96%B0%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="write-up"><a href="#write-up" class="headerlink" title="write up"></a>write up</h1><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><h3 id="Ez-ez"><a href="#Ez-ez" class="headerlink" title="Ez_ez"></a>Ez_ez</h3><p>Ez_ez然后找ida64打开这个helloELF这个文件搜索ida工具使用教程然后按了f5答案就出来了</p><h3 id="ez-asm"><a href="#ez-asm" class="headerlink" title="ez_asm"></a>ez_asm</h3><p>ez_asm 打开发现里面有H，H在计算机中表示16进制，让后尝试16进制转换为10进制让后换算出来ASCII</p><p>依次类推转换完就是pflag{Hello_Assembly}</p><h3 id="welcome-login"><a href="#welcome-login" class="headerlink" title="welcome_login"></a>welcome_login</h3><p>welcome_login下载发现是一个可执行文件然后使用ida64打开发现没有然后使用ida32位打开选中几个字段然后跳转到地址然后上下找发现分成三段然后一个一个复制让后就出来了答案</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="欢迎欢迎"><a href="#欢迎欢迎" class="headerlink" title="欢迎欢迎"></a>欢迎欢迎</h3><p>欢迎欢迎题首先打开里面的连接，习惯性的按f12查看内存中的源代码发现里面又一行注释falg.txt让后在端口后面&#x2F;flag.txt发现flag{welcome_to_xcitc_21}</p><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>easyphp进入先看if 条件 发现是get传参数flag如果等于0就输出结果</p><p>让后就开始做题端口后面加&#x2F;?flag[]&#x3D;0 结果就出来了flag{f97c5d29941bfb1b2fdab0874906ab82}</p><h3 id="还不能相同？"><a href="#还不能相同？" class="headerlink" title="还不能相同？"></a>还不能相同？</h3><p>还不能相同？进入先看单行多if 条件 发现是get传参数username和password让后条件是</p><p>username和password两个不能相同让后我们就在端口后面加&#x2F;?username[]&#x3D;huaji&amp;password[]&#x3D;zhien</p><p>结果就出来了Flag: flag{1bc29b36f623ba82aaf6724fd3b16718}</p><h3 id="大飞机，呼呼呼"><a href="#大飞机，呼呼呼" class="headerlink" title="大飞机，呼呼呼"></a>大飞机，呼呼呼</h3><p>大飞机，呼呼呼这个就不一样了一开始以为是账号密码破解试了好久不对，让后就闲着没事打开kali使用burp suite扫一下这个地址不扫不知道发现里面有flag: Wm14aFozdG9kSFJ3WDJobFlXUmxjbDlvYUdoOQ&#x3D;&#x3D;，看到后面有两个&#x3D;&#x3D;直接幻想base64</p><p>然后网上搜索在线base64解密使用发现还是密文ZmxhZ3todHRwX2hlYWRlcl9oaGh9就在次复制上次解密一次的base64继续解密发现了flag让后结果就出来了flag{http_header_hhh}</p><h2 id="一起打篮球吧。。。。"><a href="#一起打篮球吧。。。。" class="headerlink" title="一起打篮球吧。。。。"></a>一起打篮球吧。。。。</h2><p>一起打篮球吧。。。。打开题按f12查看内存中的源代码发现里面又一行注释robots.txt 让后&#x2F;robots.txt</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">User-agent: *<br>Disallow: <span class="hljs-regexp">/admin/</span><br>Disallow: <span class="hljs-regexp">/admin/</span>shell/<br>Disallow: <span class="hljs-regexp">/admin/</span>shell/flag.php<br></code></pre></td></tr></table></figure><p>发现&#x2F;admin&#x2F;shell&#x2F;flag.php 访问发现啥也没有让后思考思考想不出来</p><p>让后的有一个点击获取flag，点击之后发现&#x2F;?file&#x3D;hint.html 让后靠我的百度搜</p><p>php有file漏洞</p><p>就按照百度方法改改&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;admin&#x2F;shell&#x2F;flag.php</p><p>让后发现是密文PD9waHAKJGZsYWcgPSAnZmxhZ3tMRklfMXNfZjRufSc7Ci8vIGVjaG8gJGZsYWc7Cj8+Cg&#x3D;&#x3D;</p><p>让后找在线base64解密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;flag&#123;LFI_1s_f4n&#125;&#x27;</span>;<br><span class="hljs-comment">// echo $flag;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后结果就出来了flag{LFI_1s_f4n}</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="NC之光"><a href="#NC之光" class="headerlink" title="NC之光"></a>NC之光</h3><p>NC之光我先用kali 终端命令行输入nc 121.40.134.251:10000 让后提示地址不存在，让后进群划水得知去掉”:”让后nc 121.40.134.251 10000进入了发现有flag.txt 让后cat flag.txt</p><p>让后结果就出来了flag{f3857b88-c92c-4426-89a6-ee94e4eac938}</p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="crypto-1"><a href="#crypto-1" class="headerlink" title="crypto"></a>crypto</h3><p>前十个都是浏览器搜索名称让后就出结果了等等等。。。。。。</p><h3 id="asc"><a href="#asc" class="headerlink" title="asc"></a>asc</h3><p>asc打开是ASCII偏移根据提示偏移-4然后根据提示的ord和cha</p><p>python写出如下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">keys=<span class="hljs-string">&#x27;Iew&#125;cewgchigshi%%%&#x27;</span><br>flag=<span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> keys:<br>    flag+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="Ez-xor"><a href="#Ez-xor" class="headerlink" title="Ez_xor"></a>Ez_xor</h3><p>看百度加谷歌加哔哩哔哩同时做出的题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">keys=<span class="hljs-string">&#x27;Qtwjqf~Tof3hfZwj\Wf6qlw\]4Wf\sf7zZFdp|\]3W&quot;$&quot;x&#x27;</span><br>flag=<span class="hljs-string">&quot;&quot;</span><br>ii = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> keys: <br>  <span class="hljs-keyword">if</span> ii == <span class="hljs-number">0</span> :<br>​    flag+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">3</span>)<br>​    ii=ii+<span class="hljs-number">1</span><br>  <span class="hljs-keyword">else</span>:<br>​    flag+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">5</span>)<br>​    ii=ii-<span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="flag好像要扫一扫"><a href="#flag好像要扫一扫" class="headerlink" title="flag好像要扫一扫"></a>flag好像要扫一扫</h3><p>flag好像要扫一扫打开压缩包提示密码使用PassperforZIP_v3.6.0.1工具按照题提示走的密码直接出密码为1234</p><p>打开尽然是个微信二维码好友加好友就给我flag让后结果忘记了</p><h3 id="大吉"><a href="#大吉" class="headerlink" title="大吉"></a>大吉</h3><p>大吉是一个pdf百度得知pdf在ctf中直接转换为word就可以弄出让后使用网页在线pdf转换word</p><p>转换之后打开文件把照片移走就是答案了</p><h3 id="乌贼乌贼"><a href="#乌贼乌贼" class="headerlink" title="乌贼乌贼"></a>乌贼乌贼</h3><p>乌贼乌贼是一个图片百度得知图片在ctf中用16进制打开就是答案让后我下载了hex工具打开之后从下往上在最后面看到flag让后就出来了</p><h3 id="奇怪的压缩包"><a href="#奇怪的压缩包" class="headerlink" title="奇怪的压缩包"></a>奇怪的压缩包</h3><p>奇怪的压缩包直接打开压缩包让后打开里面word文件里面就是答案</p><h3 id="Ez-png"><a href="#Ez-png" class="headerlink" title="Ez_png"></a>Ez_png</h3><p>Ez_png是一个压缩包里面有一个图片让后打开是一个500*500的图片让后百度搜索ctf图片隐写然后尝试使用010editor工具按照百度上面的改宽度高度都是600发现打不开然后改成1000还是打不开然后陷入思考在看题提示然后就尝试单独改高度改成600发现下面又flag然后就出来答案了</p><h3 id="你知道GIF嘛"><a href="#你知道GIF嘛" class="headerlink" title="你知道GIF嘛"></a>你知道GIF嘛</h3><p>你知道GIF嘛是一个压缩包里面一个jpg图片然后一直找不到思路让后在群里面别人在了在了聊java环境和stegsolve然后我就在想这是那个题让后发现你知道GIF嘛这个题提示看到stegsolve然后在网上弄了工具打开然后一直切换颜色发现一直不出答案然后就靠百度搜索搜索stegsolve用法发现有analyse下面的frame browse 发现有三个图片然后切换发现答案</p><h3 id="正经的jpg？"><a href="#正经的jpg？" class="headerlink" title="正经的jpg？"></a>正经的jpg？</h3><p>正经的jpg？根据Ez_png的那一题百度知道使用kali终端binwalk 命令</p><p>然后binwalk cover.jpg</p><p>└─$ binwalk cover.jpg</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-type">DECIMAL</span>       <span class="hljs-type">HEXADECIMAL</span>     <span class="hljs-type">DESCRIPTION</span>                                            <br><span class="hljs-comment">--------------------------------------------------------------------------------                                         </span><br><span class="hljs-number">0</span>             <span class="hljs-number">0x0</span>             <span class="hljs-type">JPEG</span> image <span class="hljs-class"><span class="hljs-keyword">data</span>, <span class="hljs-type">JFIF</span> standard 1.01                                          </span><br><span class="hljs-number">58499</span>         <span class="hljs-number">0xE483</span>          <span class="hljs-type">JPEG</span> image <span class="hljs-class"><span class="hljs-keyword">data</span>, <span class="hljs-type">EXIF</span> standard</span><br><span class="hljs-number">58511</span>         <span class="hljs-number">0xE48F</span>          <span class="hljs-type">TIFF</span> image <span class="hljs-class"><span class="hljs-keyword">data</span>, big-endian, offset of first image directory: 8</span><br></code></pre></td></tr></table></figure><p>里面是两个文件让后尝试进入Windows把图片后缀改成zip然后打不开然后就继续百度使用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dd <span class="hljs-attribute">if</span>=cover.jpg <span class="hljs-attribute">of</span>=2.jpg <span class="hljs-attribute">skip</span>=58499 <span class="hljs-attribute">bs</span>=1 <br>记录了882232+0 的读入                                     记录了882232+0 的写出                                     882232字节（882 kB，862 KiB）已复制，1.30735 s，675 kB/s <br></code></pre></td></tr></table></figure><p>然后提示写入一个文件我让后在kali里面双击进入发现打不开然后陷入思考想不出来就把他拖拉到Windows里面想着备份然后拖拉过来之后发现可以打开然后就出来答案了</p><h3 id="flag为flag-号码进行一次md5加密"><a href="#flag为flag-号码进行一次md5加密" class="headerlink" title="flag为flag{号码进行一次md5加密}"></a>flag为flag{号码进行一次md5加密}</h3><p>flag为flag{号码进行一次md5加密}打开发现是一个zip里面一个wav音频格式让后播放发现是声音还能播放然后百度得知可以使用工具audacity然后弄了很久还是没有弄出来可能是不会使用这个工具让后尝试使用手机的按键声音和ctf中的声音对比发现啥也听不过来让后在次使用百度搜索拨号码提取工具让后在GitHub中找到一款手机上面的一款DTMFdecodeer让后电脑播放音乐手机使用这个软件听出是783083491然后在百度中搜索md5加密让后转换提交发现不对然后看了还有其他的加密选项64位大写小写32位等然后一个一个尝试发现64位小数还是大写忘记了然后答案出来了</p>]]></content>
      
      
      <categories>
          
          <category> xcitc wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> xcitc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的使用</title>
      <link href="/2021/08/29/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/08/29/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Git"><a href="#什么是-Git" class="headerlink" title="什么是 Git"></a>什么是 Git</h2><p>Git 是分布式版本控制系统，可以帮助团队协作开发、管理代码版本，以及追踪文件的改动。</p><h2 id="Git-基本配置"><a href="#Git-基本配置" class="headerlink" title="Git 基本配置"></a>Git 基本配置</h2><p>在开始使用 Git 之前，需要进行基本的配置，包括用户名和邮箱等信息。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;Your Name&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;your-email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="创建新仓库"><a href="#创建新仓库" class="headerlink" title="创建新仓库"></a>创建新仓库</h2><p>创建一个新的本地仓库可以使用 <code>git init</code> 命令。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><p>如果要获取远程仓库的代码到本地可以使用 <code>git clone</code> 命令。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">&lt;repository-url</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><p>以下是一些常用的 Git 命令和操作：</p><ul><li><code>git add &lt;file&gt;</code>: 将文件添加到暂存区。</li><li><code>git commit -m &quot;Commit message&quot;</code>: 提交暂存区的改动到本地仓库。</li><li><code>git status</code>: 显示工作区和暂存区的状态。</li><li><code>git log</code>: 查看提交历史记录。</li><li><code>git branch</code>: 列出所有分支。</li><li><code>git checkout &lt;branch-name&gt;</code>: 切换到指定的分支。</li><li><code>git merge &lt;branch-name&gt;</code>: 合并指定分支到当前分支。</li></ul><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><p>使用分支可以同时进行多个功能的开发，以下是一些常见的分支操作：</p><ul><li><code>git branch &lt;branch-name&gt;</code>: 创建一个新的分支。</li><li><code>git branch -d &lt;branch-name&gt;</code>: 删除指定的分支。</li><li><code>git checkout &lt;branch-name&gt;</code>: 切换到指定的分支。</li><li><code>git merge &lt;branch-name&gt;</code>: 合并指定分支到当前分支。</li><li><code>git stash</code>: 暂存当前的修改。</li></ul><h2 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h2><p>使用远程仓库可以方便地与团队成员协作和共享代码，以下是一些常见的远程操作：</p><ul><li><code>git remote add origin &lt;repository-url&gt;</code>: 关联本地仓库与远程仓库。</li><li><code>git push -u origin &lt;branch-name&gt;</code>: 将本地分支推送到远程仓库。</li><li><code>git pull</code>: 获取远程仓库的最新代码。</li><li><code>git clone &lt;repository-url&gt;</code>: 克隆远程仓库到本地。</li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> gitee </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好HEXO</title>
      <link href="/2021/08/10/hello-world/"/>
      <url>/2021/08/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎光临<a href="https://huajinet.cc/">滑稽博客</a> !这是你的第一个帖子。如果您在使用滑稽博客时遇到任何问题，您可以在<a href="http://wpa.qq.com/msgrd?v=3&uin=3514825663&site=qq&menu=yes">企鹅联系我</a>上问我。</p><h2 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h2><h3 id="HEXO创建一个新帖子"><a href="#HEXO创建一个新帖子" class="headerlink" title="HEXO创建一个新帖子"></a>HEXO创建一个新帖子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><h3 id="HEXO运行服务器"><a href="#HEXO运行服务器" class="headerlink" title="HEXO运行服务器"></a>HEXO运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><h3 id="HEXO运行服务器-1"><a href="#HEXO运行服务器-1" class="headerlink" title="HEXO运行服务器"></a>HEXO运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><h3 id="HEXO部署到远程站点"><a href="#HEXO部署到远程站点" class="headerlink" title="HEXO部署到远程站点"></a>HEXO部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
